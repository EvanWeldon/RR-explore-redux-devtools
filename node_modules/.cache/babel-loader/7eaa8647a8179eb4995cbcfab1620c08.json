{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      return {\n        value: state.value + 1\n      };\n    },\n    decrement: state => {\n      return {\n        value: state.value - 1\n      };\n    },\n    incrementByAmount: (state, action) => {\n      return {\n        value: state.value + action.payload\n      };\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/home/evan/Documents/SDSU/RR/Module-9/RR-Explore-Redux-Devtools/src/features/counterSlice.js"],"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,SAD8B;AAEpCH,EAAAA,YAFoC;AAGpCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AAClB,aAAO;AAAEL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAAvB,OAAP;AACH,KAHK;AAINM,IAAAA,SAAS,EAAGD,KAAD,IAAW;AAClB,aAAO;AAAEL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAAvB,OAAP;AACH,KANK;AAONO,IAAAA,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAClC,aAAO;AAAER,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAcQ,MAAM,CAACC;AAA9B,OAAP;AACH;AATK;AAH0B,CAAD,CAAhC;AAgBP,OAAO,MAAM;AAAEL,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,IAA8CN,YAAY,CAACS,OAAjE;AAEP,eAAeT,YAAY,CAACU,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    value: 0\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state) => {\n            return { value: state.value + 1 }\n        },\n        decrement: (state) => {\n            return { value: state.value - 1 }\n        },\n        incrementByAmount: (state, action) => {\n            return { value: state.value + action.payload }\n        }\n    }\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"]},"metadata":{},"sourceType":"module"}