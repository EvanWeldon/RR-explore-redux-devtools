{"ast":null,"code":"var _jsxFileName = \"/home/evan/Documents/SDSU/RR/Module-9/RR-Explore-Redux-Devtools/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTodo, removeOne, clearTodo } from './features/todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const items = useSelector(state => state.todos.items);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n  const renderItems = items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => dispatch(removeOne(index)),\n    children: item\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 52\n  }, this));\n\n  const submitForm = e => {\n    e.preventDefault();\n    dispatch(addTodo(input));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submitForm(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(clearTodo()),\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"0kWSq7CAB1MaDe+AAdpdi4n7MdI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/evan/Documents/SDSU/RR/Module-9/RR-Explore-Redux-Devtools/src/Todo.js"],"names":["React","useState","useSelector","useDispatch","addTodo","removeOne","clearTodo","Todo","items","state","todos","dispatch","input","setInput","renderItems","map","item","index","submitForm","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA8C,sBAA9C;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,KAAxB,CAAzB;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMa,WAAW,GAAGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAgB,IAAA,OAAO,EAAE,MAAMN,QAAQ,CAACN,SAAS,CAACY,KAAD,CAAV,CAAvC;AAAA,cAA4DD;AAA5D,KAASC,KAAT;AAAA;AAAA;AAAA;AAAA,UAA3B,CAApB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAACP,OAAO,CAACQ,KAAD,CAAR,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAGO,CAAD,IAAOD,UAAU,CAACC,CAAD,CAAjC;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGA,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBACKR;AADL;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAQ,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACL,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxBQC,I;UACSL,W,EACGC,W;;;KAFZI,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addTodo, removeOne, clearTodo } from './features/todoSlice'\n\nfunction Todo() {\n    const items = useSelector((state) => state.todos.items)\n    const dispatch = useDispatch()\n    const [input, setInput] = useState('')\n\n    const renderItems = items.map((item, index) => <li key={index} onClick={() => dispatch(removeOne(index))}>{item}</li>)\n\n    const submitForm = (e) => {\n        e.preventDefault()\n        dispatch(addTodo(input))\n    }\n\n    return (\n        <div>\n            <form onSubmit={(e) => submitForm(e)}>\n                <input type=\"text\" onChange={(e) => setInput(e.target.value)} />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <ul>\n                {renderItems}\n            </ul>\n            <button onClick={() => dispatch(clearTodo())}>Clear</button>\n        </div>\n    )\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}